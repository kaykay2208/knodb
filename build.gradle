/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.1/userguide/tutorial_java_projects.html
 */

plugins {
    // Apply the java plugin to add support for Java
    id 'java'

    // Apply the application plugin to add support for building an application
    id 'application'
    id 'com.google.protobuf' version '0.8.8'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}


repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is found on compile classpath of this component and consumers.
    implementation 'com.google.guava:guava:26.0-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
  implementation 'io.grpc:grpc-netty:1.43.0'
    implementation 'io.grpc:grpc-protobuf:1.43.0'
    implementation 'io.grpc:grpc-stub:1.43.0'
   implementation 'com.google.protobuf:protobuf-java:3.18.0'
    implementation 'org.apache.kafka:kafka-clients:3.0.0'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.5'

}

apply plugin: 'application'
mainClassName = 'com.grpc.knodb.App'

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.18.0'
    }
    plugins {
        grpc {
           artifact = 'io.grpc:protoc-gen-grpc-java:1.43.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
    jar {
        manifest {
            attributes 'Main-Class': mainClassName
        }
    }
    shadowJar {
        baseName = 'knodb'
        classifier = null
        version = null
    }
    task createZip(type: Zip) {
        from 'src/main/bin'
        from shadowJar
        archiveFileName = 'knodb.zip'
        destinationDir = file("$buildDir/distributions")
    }


}
